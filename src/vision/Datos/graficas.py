import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
predicciones2 = np.array([[0.02592455, -0.04724509, 0.49285573],
                          [0.10464478, 0.11041783, 0.44190085],
                          [0.09310853, 0.19826294, 0.46802214],
                          [-0.15296227, -0.18275256, 0.44908726],
                          [0.07504079, -0.14946397, 0.49106485],
                          [-0.14364846, -0.13542764, 0.38980886],
                          [-0.00859867, 0.04960328, 0.5401807],
                          [-0.03424553, -0.01825917, 0.5001879],
                          [0.01681267, -0.08773124, 0.49960554],
                          [-0.07461101, 0.01441914, 0.47598854],
                          [-0.11655939, 0.13590033, 0.41988152],
                          [-0.00528088, 0.01455533, 0.4750198],
                          [-0.04086092, -0.1323899, 0.4350009]])

valores_reales2 = np.array([[1.77205176e-17, -4.44245969e-02, 5.11830806e-01],
                            [-0.20108739, 0.20108739, 0.40499555],
                            [2.12500000e-01, -7.09143668e-16, 4.57219797e-01],
                            [-0.20108739, -0.20108739, 0.40499555],
                            [0.09286591, -0.09286591, 0.49335802],
                            [-2.84380508e-01, 8.99519362e-16, 4.04995551e-01],
                            [4.44245969e-02, -1.69421017e-16, 5.11830806e-01],
                            [1.77205176e-17, -4.44245969e-02, 5.11830806e-01],
                            [0.03141293, 0.03141293, 0.51183081],
                            [4.44245969e-02, 2.58811837e-17, 5.11830806e-01],
                            [-0.20108739, 0.20108739, 0.40499555],
                            [4.44245969e-02, -1.69421017e-16, 5.11830806e-01],
                            [-0.20108739, -0.20108739, 0.40499555]])


predicciones1= np.array([[0.01587454, 0.00593805, 0.08226164],
                         [0.0089891, -0.00665474, 0.07269891],
                         [0.01797587, -0.0049786, 0.10525992],
                         [-0.00404299, -0.01190037, 0.0870373],
                         [0.00952778, -0.01541634, 0.09874065],
                         [-0.00837072, 0.01575068, 0.09161692],
                         [-0.00414863, -0.04824197, 0.10742213],
                         [-0.00523161, -0.01448508, 0.09273672],
                         [-0.01115146, -0.00174601, 0.10427898],
                         [-0.04050853, -0.00419696, 0.1125749],
                         [0.01406789, -0.02773147, 0.06491844],
                         [-0.006877, -0.00438633, 0.11693656],
                         [-0.05451076, -0.01365402, 0.06184569]])

valores_reales1 = np.array([[0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159],
                            [0.0, 0.0, 0.089159]])
predicciones3 = np.array([[-0.02121974, -0.1726273, 0.27246538],
                          [-0.08656354, 0.06759423, 0.7265677],
                          [-0.05678004, -0.09999201, 0.5863875],
                          [-0.2478952, -0.3181383, 0.08617113],
                          [0.28034872, -0.2920818, 0.35499093],
                          [-0.07740392, 0.02847117, 0.76860815],
                          [0.02218557, 0.21532537, 0.42719153],
                          [-0.15735655, 0.06945249, 0.57207036],
                          [-0.03109436, -0.18257155, 0.45424926],
                          [-0.05579045, 0.07680547, 0.45773852],
                          [-0.32515395, 0.55467135, 0.3090976],
                          [-0.04649704, -0.14460902, 0.31343028],
                          [-0.10075423, -0.0668195, 0.5176938]
                          ])

valores_reales3 = np.array([[-5.46909808e-17, -3.61761513e-01, 2.81272040e-01],
                            [0.00503322, -0.00503322, 0.66746203],
                            [-1.27198465e-01, 3.76443162e-16, 6.53344797e-01],
                            [-0.3521499, -0.3521499, 0.07602702],
                            [0.29705939, -0.29705939, 0.22789596],
                            [-7.07458462e-02, 1.89103212e-16, 7.33964081e-01],
                            [4.34525810e-01, -1.42736221e-15, 4.70829516e-01],
                            [9.35972204e-17, 3.21772325e-01, 6.52400634e-01],
                            [-0.24253491, -0.24253491, 0.45046939],
                            [-3.13913609e-01, 1.61120263e-17, 3.52288357e-01],
                            [-0.4482193, 0.4482193, 0.22691778],
                            [-3.27355990e-01, 1.03949274e-15, 3.86773787e-01],
                            [0.04604453, 0.04604453, 0.58307332]
                            ])
import numpy as np

predicciones4 = np.array([  [ 0.04934568, -0.22316572,  0.29732558],
  [-0.16304964, -0.00064549,  0.68276978],
  [-0.16824788, -0.1271188 ,  0.63823855],
  [-0.26187518, -0.31098744,  0.12094073],
  [ 0.3282814 , -0.22840403,  0.284669  ],
  [-0.12382741,  0.03935062,  0.6923535 ],
  [-0.08321448,  0.18351157,  0.44219896],
  [-0.0140215 ,  0.10438085,  0.63961214],
  [-0.08028117, -0.18561986,  0.4108029 ],
  [-0.16798247, -0.11100071,  0.3761503 ],
  [-0.1699799 ,  0.4225552 ,  0.24559866],
  [-0.12346032, -0.11045661,  0.37993795],
  [-0.00879524, -0.22603714,  0.37649   ]
])

valores_reales4 = np.array([  [-0.10915   , -0.36176151,  0.28127204],
  [-0.07214748, -0.08221393,  0.66746203],
  [-0.12719846,  0.10915   ,  0.6533448 ],
  [-0.2749692 , -0.42933061,  0.07602702],
  [ 0.37424009, -0.21987868,  0.22789596],
  [-0.07074585,  0.10915   ,  0.73396408],
  [ 0.43452581,  0.10915   ,  0.47082952],
  [-0.10915   ,  0.32177233,  0.65240063],
  [-0.1653542 , -0.31971561,  0.45046939],
  [-0.31391361, -0.10915   ,  0.35228836],
  [-0.3710386 ,  0.52540001,  0.22691778],
  [-0.32735599,  0.10915   ,  0.38677379],
  [ 0.12322524, -0.03113617,  0.58307332]
])

predicciones5 = np.array([    [-0.14512049, -0.16125591, 0.29455575],
    [-0.06594868, 0.02035392, 0.72754645],
    [-0.26472494, -0.14288226, 0.6572662],
    [-0.24876247, -0.31874615, 0.10120342],
    [0.48900557, -0.24049006, 0.23875158],
    [0.06245484, 0.08274048, 0.7542663],
    [-0.16147812, 0.18867062, 0.44560704],
    [-0.15838517, 0.09406254, 0.71103925],
    [-0.08282699, -0.30347168, 0.35707286],
    [-0.2117051, -0.1225509, 0.3364321],
    [-0.24240474, 0.35408014, 0.2553546],
    [-0.17065568, -0.0996466, 0.35506916],
    [-0.02265291, -0.05631295, 0.39956984]
])

valores_reales5 = np.array([    [-0.10915, -0.36739443, 0.37575428],
    [-0.07540206, -0.07895935, 0.76200006],
    [-0.03603244, 0.10915, 0.67878845],
    [-0.34107436, -0.49543577, 0.06123385],
    [0.44032006, -0.28595865, 0.24291259],
    [0.01168353, 0.10915, 0.78048311],
    [0.47280946, 0.10915, 0.38426749],
    [-0.10915, 0.30143651, 0.55996105],
    [-0.14918233, -0.30354374, 0.35862406],
    [-0.38789079, -0.10915, 0.41133071],
    [-0.39144342, 0.54580483, 0.3170616],
    [-0.27951582, 0.10915, 0.30510408],
    [0.06529301, -0.0890684, 0.63046886]
])
predicciones6 = np.array([ [-0.01328716, -0.13119784, 0.34971493],
    [0.0771022, -0.12277557, 0.71497166],
    [-0.1868588, -0.16488689, 0.6444276],
    [-0.19544321, -0.30049035, 0.21653908],
    [0.3144283, -0.21445568, 0.3519677],
    [-0.05474144, 0.09048595, 0.7713716],
    [-0.2108329, 0.2117274, 0.43668053],
    [-0.22912359, 0.03430634, 0.6771923],
    [-0.08689648, -0.17267217, 0.39748788],
    [-0.0941647, -0.14306514, 0.3654794],
    [-0.35885787, 0.36207104, 0.09100135],
    [-0.08752146, -0.14776036, 0.38389763],
    [0.11446509, -0.14013009, 0.5415632]
])

valores_reales6 = np.array([ [-0.04511179, -0.31579082, 0.37883082],
    [-0.11586429, -0.00739662, 0.75814347],
    [-0.02258819, 0.0437891, 0.63061693],
    [-0.37933363, -0.44533603, 0.00832322],
    [0.4164421, -0.32533706, 0.17470355],
    [0.05089336, 0.08893345, 0.71100527],
    [0.42283663, 0.04760706, 0.36216608],
    [-0.07098032, 0.23022588, 0.5756267],
    [-0.15700103, -0.22263313, 0.37149389],
    [-0.43322619, -0.07053127, 0.35452767],
    [-0.39947497, 0.46554596, 0.33341087],
    [-0.3333303, 0.05545105, 0.27358084],
    [0.00361411, -0.06875369, 0.57990883]
])

# Creamos la gráfica
sns.regplot(x=predicciones1.flatten(), y=valores_reales1.flatten(), label='Joint1', scatter_kws={'edgecolor':'w'}, order=1)
sns.regplot(x=predicciones2.flatten(), y=valores_reales2.flatten(), label='Joint2', scatter_kws={'edgecolor':'w'}, order=1)
sns.regplot(x=predicciones3.flatten(), y=valores_reales3.flatten(), label='Joint3', scatter_kws={'edgecolor':'w'}, order=1)
sns.regplot(x=predicciones4.flatten(), y=valores_reales4.flatten(), label='Joint4', scatter_kws={'edgecolor':'w'}, order=1)
sns.regplot(x=predicciones5.flatten(), y=valores_reales5.flatten(), label='Joint5', scatter_kws={'edgecolor':'w'}, order=1)
sns.regplot(x=predicciones6.flatten(), y=valores_reales6.flatten(), label='Joint6', scatter_kws={'edgecolor':'w'}, order=1)


# Configuramos el título y los ejes
# plt.title('Comparison of predictions and actual values')
plt.xlabel('Preditions [m]')
plt.ylabel('Actual values [m]')
plt.legend()
plt.grid()
plt.savefig('Regresion.svg')
# Mostramos la gráfica
plt.show()

# # Graficar la nueva regresión
# plt.scatter(predicciones1, valores_reales1, c='m', marker='o')
#
# # Configurar el título y los ejes
# plt.title('Comparación de predicciones2 y valores reales')
# plt.xlabel('Predicciones')
# plt.ylabel('Valores reales')
#
# # Agregar leyenda
# plt.legend(['Regresión anterior', 'Nueva regresión'])
#
# # Configurar el aspecto de la gráfica
# plt.grid(alpha=0.5)
# plt.tight_layout()
#
# # Mostrar la gráfica
# plt.show()